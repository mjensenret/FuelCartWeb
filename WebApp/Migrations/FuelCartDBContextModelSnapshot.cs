// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WebApp.Models;

namespace WebApp.Migrations
{
    [DbContext(typeof(FuelCartDBContext))]
    partial class FuelCartDBContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.3-servicing-35854")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("WebApp.Models.FuelCartModel", b =>
                {
                    b.Property<int>("CartId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CartName");

                    b.Property<int>("HeadTypeId");

                    b.Property<string>("OASGroupName");

                    b.HasKey("CartId");

                    b.HasIndex("HeadTypeId");

                    b.ToTable("FuelCarts");
                });

            modelBuilder.Entity("WebApp.Models.RegisterHead", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Type");

                    b.HasKey("Id");

                    b.ToTable("RegisterHead");
                });

            modelBuilder.Entity("WebApp.Models.Transactions", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("AvgDensity");

                    b.Property<double>("AvgMeterFactor");

                    b.Property<double>("AvgPressure");

                    b.Property<double>("AvgTemperature");

                    b.Property<double>("CPL");

                    b.Property<double>("CTL");

                    b.Property<int>("CartId");

                    b.Property<DateTime>("EndDateTime");

                    b.Property<double>("GSTTotalizer");

                    b.Property<double>("GSTVolume");

                    b.Property<double>("GSVTotalizer");

                    b.Property<double>("GSVVolume");

                    b.Property<double>("GVTotalizer");

                    b.Property<double>("GVVolume");

                    b.Property<double>("IVTotalizer");

                    b.Property<double>("IVVolume");

                    b.Property<int>("OperatorId");

                    b.Property<int>("OrderId");

                    b.Property<int>("SequenceId");

                    b.Property<DateTime>("StartDateTime");

                    b.Property<int>("TransactionId");

                    b.HasKey("Id");

                    b.HasIndex("CartId");

                    b.ToTable("Transactions");
                });

            modelBuilder.Entity("WebApp.Models.FuelCartModel", b =>
                {
                    b.HasOne("WebApp.Models.RegisterHead", "HeadType")
                        .WithMany()
                        .HasForeignKey("HeadTypeId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("WebApp.Models.Transactions", b =>
                {
                    b.HasOne("WebApp.Models.FuelCartModel", "FuelCart")
                        .WithMany("Transactions")
                        .HasForeignKey("CartId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
